//二分法查找
//有序一组数据，从中找到米想要找的数，并打出其下标.
//   1   3   4   5   6   8   9   10   12   14   16 (11个数，sz=11)    查找数字 10
//left=0                mid=5                right=10
// 10>v[5]=8   left=mid+1=6   mid=(l+r)/2=(6+10)/2=8
//   1   3   4   5   6   8   9   10   12   14   16 
//                         left=6   mid=8    right=10
//                          l,m=6  r=7
// 10<v[8]=12 right=mid-1=7 ,mid=(6+7)/2=6 ; 
//10>v[6]   ,l=m+1=7 ,m=(7+7)/2=7 ,10=v[7]
#include <stdio.h>
int main(){
	int v[]={1,2,3,4,5,6,8,9,10,11};
	int sz=sizeof v/sizeof (int);  //数组长度
	int left=0;  //左下标
	int right=sz-1;   //右下标。
	int x;
	scanf("%d",&x);

	while(left<=right){
		int mid = (left+right)/2;  //中间下标
		if(x<v[mid]) right =mid-1;
		else if(x>v[mid]) left =mid+1;
		else { 
			printf("find it! \nIt is v[%d]=%d\n",mid,v[mid]);
			break;
		}
	if(left>right) {
			printf("can not find it!\n");
			break;
		}
		
		//  左右下标交错了，没元素可以查找了
	}

	return 0;
}
